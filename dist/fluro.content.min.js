angular.module("fluro.content",["fluro.util","ngResource"]),angular.module("fluro.content").service("FluroContent",function($resource,CacheManager,Fluro){var controller={};return controller.resource=function(type,ignoreLoadingBar,noCache){var cache=CacheManager.get(type);return noCache&&(cache=!1),$resource(Fluro.apiURL+"/content/"+type+"/:id",{},{update:{method:"PUT",ignoreLoadingBar:ignoreLoadingBar},save:{method:"POST",ignoreLoadingBar:ignoreLoadingBar},query:{method:"GET",isArray:!0,cache:cache,ignoreLoadingBar:ignoreLoadingBar},batch:{method:"POST",ignoreLoadingBar:ignoreLoadingBar}})},controller.endpoint=function(path,ignoreLoadingBar,noCache){var cache=CacheManager.get(path);return noCache&&(cache=!1),$resource(Fluro.apiURL+"/"+path,{},{update:{method:"PUT",ignoreLoadingBar:ignoreLoadingBar},save:{method:"POST",ignoreLoadingBar:ignoreLoadingBar},query:{method:"GET",isArray:!0,cache:cache,ignoreLoadingBar:!0},batch:{method:"POST",ignoreLoadingBar:ignoreLoadingBar}})},controller}),angular.module("fluro.content").service("FluroContentRetrieval",function($cacheFactory,Fluro,$q,$http){var controller={},cache={};return controller.getItemFromProduct=function(itemID,productID,options){options||(options={});var deferred=$q.defer(),url=Fluro.apiURL+"/content/contained/"+productID+"/"+itemID;return options.noCache&&(url+="?noCache=true"),$http.get(url).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},controller.getCollection=function(id,noCache){var deferred=$q.defer(),url=Fluro.apiURL+"/content/_collection/"+id;return noCache&&(url+="?noCache=true"),$http.get(url).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},controller.getMultipleCollections=function(ids,noCache,variables){var variableParams,deferred=$q.defer(),url=Fluro.apiURL+"/content/_collection/multiple";return variables&&(variableParams=_.map(variables,function(v,k){return"variables["+k+"]="+encodeURIComponent(v)}).join("&")),(noCache||variableParams)&&(url+="?"),variableParams&&variableParams.length&&(url+=variableParams),noCache&&(url+="&noCache=true"),$http({method:"GET",url:url,params:{ids:ids}}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},controller.getQuery=function(id,options,variables){options||(options={});var deferred=$q.defer(),url=Fluro.apiURL+"/content/_query/"+id,queryParams="";return(options.noCache||options.template||variables)&&(queryParams="?"),options.noCache&&(queryParams+="&noCache=true"),options.template&&(queryParams+="&template="+options.template),variables&&(queryParams+=_.map(variables,function(v,k){return"variables["+k+"]="+encodeURIComponent(v)}).join("&")),queryParams.length&&(url+=queryParams),$http.get(url).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},controller.query=function(queryDetails,typeName,id,params,variables){var url,deferred=$q.defer();params||(params={}),params&&!_.isObject(params)&&(params={noCache:!0});var queryParams=_.map(params,function(v,k){return encodeURIComponent(k)+"="+encodeURIComponent(v)}).join("&");return variables&&(queryParams+=_.map(variables,function(v,k){return"variables["+k+"]="+encodeURIComponent(v)}).join("&")),id&&(url=Fluro.apiURL+"/content/_query/"+id,queryParams.length&&(url+="?"+queryParams),$http.get(url).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)})),typeName&&typeName.length?(url=Fluro.apiURL+"/content/"+typeName+"/_query",queryParams.length&&(url+="?"+queryParams),$http.post(url,queryDetails).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)})):(url=Fluro.apiURL+"/content/_query",$http({url:url,method:"POST",params:params,data:queryDetails}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)})),deferred.promise},controller.queryMultiple=function(ids,noCache,variables){var variableParams,deferred=$q.defer(),url=Fluro.apiURL+"/content/_query/multiple";return variables&&(variableParams=_.map(variables,function(v,k){return"variables["+k+"]="+encodeURIComponent(v)}).join("&")),(noCache||variableParams)&&(url+="?"),variableParams&&variableParams.length&&(url+=variableParams),noCache&&(url+="&noCache=true"),$http({method:"GET",url:url,params:{ids:ids}}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},controller.retrieveMultiple=function(ids,noCache,params){var deferred=$q.defer(),url=Fluro.apiURL+"/content/multiple";return noCache&&(url+="?noCache=true"),params||(params={}),params.ids=ids,$http({method:"GET",url:url,params:params}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},controller.populate=function(contentArray,noCache,params){var ids=_.map(contentArray,function(item){return item._id?item._id:item});return controller.get(ids,noCache,params)},controller.populatePartial=function(contentArray,fields,noCache,searchInheritable){var deferred=$q.defer(),ids=_.map(contentArray,function(item){return item._id?item._id:item});return controller.retrieveMultiple(ids,noCache,{select:fields,searchInheritable:searchInheritable}).then(deferred.resolve,deferred.reject),deferred.promise},controller.get=function(ids,noCache,queryStringParams){function finish(){var results=_.map(ids,function(id){return cache[id]});deferred.resolve(results)}var requiredIds,deferred=$q.defer();return requiredIds=noCache?ids:_.filter(ids,function(id){return!cache[id]}),requiredIds.length?(queryStringParams||(queryStringParams={}),controller.retrieveMultiple(requiredIds,noCache,queryStringParams).then(function(res){_.each(res,function(item){cache[item._id]=item}),finish()},function(res){deferred.reject(res)})):finish(),deferred.promise},controller});